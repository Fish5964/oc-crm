<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geeke.dictitem.dao.SysDictItemDao">
  <sql id="sysDictItemColumns">
    <trim suffixOverrides=",">
      a.dict_type_id AS "dictTypeId",
      a.name AS "name",
      a.value AS "value",
    </trim>
  </sql>
  <sql id="sysDictItemJoins">
  </sql>
  <select id="get" resultType="com.geeke.dictitem.entity.SysDictItem">
    SELECT
    <include refid="sysDictItemColumns" />
    FROM sys_dict_item a
    <include refid="sysDictItemJoins" />
    WHERE a.id = #{id}
  </select>



  <select id="getbycode" resultType="com.geeke.dictitem.entity.SysDictItem">
    SELECT
    sdi.name as name,
    sdi.value as value
    from sys_dict_item sdi
    inner join sys_dict_type sdt
    on sdi.dict_type_id = sdt.id
    where sdt.code = #{type}
  </select>

  <select id="count" resultType="int">
    SELECT COUNT(*) FROM sys_dict_item a
    <include refid="sysDictItemJoins" />
    <where>
      1=1
      <include refid="Common.whereParams" />
    </where>
  </select>
  <select id="listPage" resultType="com.geeke.dictitem.entity.SysDictItem">
    SELECT
    <include refid="sysDictItemColumns" />
    FROM sys_dict_item a
    <include refid="sysDictItemJoins" />
    <where>
      1=1
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.create_date DESC
      </otherwise>
    </choose>
    LIMIT #{limit} OFFSET #{offset}
  </select>
  <select id="listAll" resultType="com.geeke.dictitem.entity.SysDictItem">
    SELECT
    <include refid="sysDictItemColumns" />
    FROM sys_dict_item a
    <include refid="sysDictItemJoins" />
    <where>
      1=1
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.create_date DESC
      </otherwise>
    </choose>
  </select>
  <insert id="insert">
    INSERT INTO sys_dict_item(
    <trim suffixOverrides=",">
      dict_type_id,
      name,
      value,
    </trim>
    ) VALUES (
    <trim suffixOverrides=",">
      #{ dictTypeId },
      #{ name },
      #{ value },
    </trim>
    )
  </insert>
  <update id="update">
    UPDATE sys_dict_item SET
    <trim suffixOverrides=",">
      dict_type_id = #{ dictTypeId },
      name = #{ name },
      value = #{ value },
    </trim>
    WHERE id = #{id}
  </update>
  <update id="delete">
    DELETE FROM sys_dict_item
    WHERE id = #{id}
  </update>
  <insert id="bulkInsert" parameterType="java.util.List">
    INSERT INTO sys_dict_item(
    <trim suffixOverrides=",">
      dict_type_id,
      name,
      value,
    </trim>
    ) VALUES
    <foreach collection="entitys" index="index" item="entity" open="" separator="," close="">
      (
      <trim suffixOverrides=",">
        #{entity.dictTypeId},
        #{entity.name},
        #{entity.value},
      </trim>
      )
    </foreach>
  </insert>
  <update id="bulkUpdate" parameterType="java.util.List">
    UPDATE sys_dict_item
    <set>
      <trim prefix="dict_type_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.dictTypeId}
        </foreach>
      </trim>
      <trim prefix="name=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.name}
        </foreach>
      </trim>
      <trim prefix="value=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.value}
        </foreach>
      </trim>
    </set>
    WHERE id IN
    <foreach collection="entitys" item="entity" index="index" separator="," open="(" close=")">
      #{entity.id}
    </foreach>
  </update>
  <update id="bulkDelete" parameterType="java.util.List">
    DELETE FROM sys_dict_item
    WHERE id IN
    <foreach collection="entitys" item="entity" index="index" separator="," open="(" close=")">
      #{entity.id}
    </foreach>
  </update>
</mapper>